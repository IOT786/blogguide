[
  
   {
      "name":"My First App",
      "description":"Welcome to Android application development! Building Your First App :-This app will teaches you how to build your first Android app. You will learn how to create an Android project with Android Studio .You will also learn some fundamentals of Android app design, including how to build a simple user interface and handle user input. Before you start, download and install Android Studio. Creating an Android Project:-This lesson shows you how to create a new Android project with Android Studio and describes some of the flles in the project. 1:- In Android Studio, create a new project: -> If you don’t have a project opened, in the Welcome to Android Studio Window, click Start a new Android Studio project. -> If you have a project opened, select FileNew file > New Project. 2:- In the New Project screen, enter the following values: -> Application Name: My First App -> Company Domain: xyz.com Android Studio fills in the package name and project location for you, but you can edit these if you’d like. 3:- Click N ext.:- In the Target Android Devices screen, keep the default values and click Next. The Minimum Required SDK is the earliest version of Android that your app supports, which is indicated by the API level. To support as many devices as possible, you should set this to the lowest version available that allows your app to provide its core feature set. If any feature of your app is possible only on newer versions of Android and it’s not critical to the core feature set, enable that feature only when running on the versions that support it. 5:- In the Add an Activity to Mobile screen, select Empty Activity and click N ext. 6:- In the Customize the Activity screen, keep the default values and click Finish. After some processing, Android Studio opens and displays a Hello World app with default files. You will add functionality to some of these files in the following lessons. Now take a moment oreview the most important tiles. First, he sure that the Project window is open (select View > Tool Windows > Project) and the Android View is selected from the drop-down list at the top. app > java > com.examplemyiirstapplication > MainActiVity.java This file appears in Android Studio after the New Project Wizard finishes. It contains the class deiinition for the activity you created earlier. When you build and run the app, the Activity starts and loads the layout file that says Hello World! app > res > layout > activity_main.xml This XML tile deiines the layout of the activity and contains a TeXtVieW element with the text Hello world! . app > manifests > AndroidManifest.xml The manifest iile describes the fundamental characteristics of the app and delines each of its components. You’ll revisit this tile as you follow these lessons and add more components to your app. Gradle Scripts >build.gradle Android Studio uses Gradle to compile and build your app.",
      "Rating":"8.54",
      "episode":700,
      "categorie":"Android Development",
      "studio":"Toei Animation",
      "img":"https://tipps.computerbild.de/imgs/19/8/7/2/3/7/android-878366c85c6e8dfa.jpg"
   },
   {
      "name":"Running Your App",
      "description":"Running Your App :- In the previous step, you created an Android project that displays Hello World.You can now run the app on a real device or on an emulator. If you don’t have a real device available than Run on an Emulator. Run on a Real Device:-Set up your device as follows: 1:-Connect your device to your development machine with a USB cable. If you’re developing on Windows, you might need to install the appropriate USB driver for your device. For help installing drivers, see the OEM USB Drivers document. 2:- Enable USB debugging on your device by going to Settings > Developer options. Note: On Android 4.2 and newer, Developer options is hidden by default. To make it available, go to Settings > About phone and tap Build number seven times. Return to the previous screen to find Developer options. Run the app from Android Studio as follows: 1:- In Android Studio, select your project and click Run from the toolbar. 2:- In the Select Deployment Target window, select your device, and click OK. Android Studio intalls the app on your connected device and starts it. Run on an Emulator:-Before you run your app on an emulator, you need to create an Android Virtual Device (AVD) deiinition. An AVD deiinition detines the characteristics of an Android phone, talet, Android Wear, or Android TV device that you want to simulate in the Android Emulator. Create an AVD Def1nition as follows: 1:- Launch the Android Virtual Device Manager by selecting Tools > Android > AVD Manager, or by clicking the AVD Manager icon in the toolar. 2:- In the Your Virtual Devices screen, click Create Virtual Device. 3:- In the Select Hardware screen, select a phone device, such as N exus 6, and then click Next. 4:- In the System Image screen, choose the desired system image for the AVD and click N ext. If you don’t have a particular system image installed, you can get it by cliking the download link. 5:- Verify the contiguration settings (for your first AVD, leave all the settings as they are), and then click Finish. Run the app from Android Studioas follows: 1:- In Android Studio, select your project and click Run from the toolbar. 2:- In the Select Deployment Target window, select your emulator and click OK. That’s how you build and run your Android app on the emulator! Samples :-ImportSamples from GitHub :-Android Studio provides easy access to import Android code samplemGitHub and is the recommended method to retrieve Android code samples. To import a code sample into Android Studio: 1:- In the Android Studio menu, select File > Import Sample to open the Import Sample wizard. 2:- Select a sample to import and click Next. 3:-Specify the application name and project location if different from the displayed settings. 4:- Click Finish. The sample project opens in a new Android Studio project. Download Samples:-Although importing samples from Android Studio is the recommended method, you can also use the categories on the left to browse the available samples and learn how to build different components for your applications. If you want to download a complete project, just click on any source file in the project and click the Download link in the upper right of the source page. To import a downloaded project: 1:- Unpack the downloaded project package. 2:- In Android Studio, chose File > Import Project and select the root folder of the unpacked project. Android Studio may ask you to choose the type of project you are importing. If this is the case, make sure to choose Import project from external model and select the Gradle option.",
      "Rating":"8.54",
      "episode":700,
      "categorie":"Android Development",
      "studio":"Toei Animation",
      "img":"https://i.stack.imgur.com/sbcQD.png"
   },
   {
      "name":"How to Generate Signed Apk",
      "description":"Signed APK is required by Google Play Store for uploading or updating APK. By Default we generate debug APK when we run our application which is unsigned and it cannot be accepted by Google Play Store. In Google Play Store every application must be signed with certificate, which holds the details about developer and secret key by which Google Play Store identifies apk is being uploaded from a valid source.   In Android Studio we have a built-in wizard to generate signed APK. To start the process of signing apk please follow the process shown below. 1:- Open Wizard Window 2:- Create Keystore 3:- Proceed To Generate Singed APK - Please enter the details that you just created in the above step. Before proceed don’t forget to mark the checkbox to remember passwords. 4:- Enter Master Password - If you have not set any password yet then please provide a new one. Please remember for future use. 5 :- Finish 6:- Wait For Background Task To Fininsh - It may take few minutes. The time taken for the building varies upon projects. 7:- See Event Log Window - Normally Android Studio notilies you With a popup alert With a link pointing to the path Where signed APK generated. 8:- Find Your APK In Directory - Normally it will be created under module folder.",
      "Rating":"8.50",
      "episode":500,
      "categorie":"Android Development",
      "studio":"Wit Studio",
      "img":"https://i.stack.imgur.com/1CPP5.png"
   },
   {
      "name":"Get Started With Publishing",
      "description":"Start publishing on Google Play by:-* Registering for a Google Play publisher account * Setting up a Google payments merchant account, if you will sell apps or in-app products. * Exploring the Google Play Developer Console and publishing tools. Register for a Publisher Account Tips:- * You need a Google account to register. You can create one during the process. * If you are an organization, consider registering a new Google account rather than using a personal account. * Review the developer countries and merchant countries where you can distribute and sell apps. 1. Visit the Google Play Developer Console. 2. Enter basic information about your developer identity name, email address, and so on. You can modify this information later. 3. Read and accept the Developer Distribution Agreement for your country or region. Note that apps and store listings that you publish on Google Play must comply with the Developer Program Policies and US export law. 4. Pay a $25 USD registration fee using Google payments. If you don’t have a Google payments account, you can quickly set one up during the process. Note :- Please use International Debit Card or Platinum Card (like. HDFC ) for countries which have local currency other than Dollar. 5. When your registration is verified, you’ll be notif1ed at the email address you entered during registration.  Set Up a Google Payments Merchant Account:- If you want to sell priced apps, in-app products, or subscriptions, you’ll need a Google payments merchant account. You can set one up at any time, but flrst review the list of merchant countries. To set up a Google payments merchant account: 1. Sign in to your Google Play Developer Console at playgoogle.com/apps/publishl. 2. Open Financial reports on the side navigation. 3. Click Setup a Merchant Account now. This takes you to the Google payments site; you’ll need information about your business to complete this step. When your registration is verified, you can sign in to your Developer Console, which is the home for your app publishing oprations and tools on Google Play.",
      "Rating":"8.16",
      "episode":70,
      "categorie":"Android Development",
      "studio":"MadhousSatr",
      "img":"https://www.dzineflip.com/wp-content/uploads/2019/11/How-to-Publish-an-App-on-Google-Play-store-1024x576.jpg"
   },
   {
      "name":"Google Developer Console",
      "description":"Developer console :-The Google Play Developer Console is your home for publishing and managing your apps. You can manage all phases of publishing on Google Play through the Developer Console. Using any web browser, you can upload apps, build product pages, set prices, configure distribution, and publish apps. After you’ve registered and received veriflcation by email, you can sign in to your Google Play Developer Console and Upload your app.   Upload an app :- After you’ve signed up for a Google Play Developer account, you can upload apps to Google Play using your Google Play Developer Console. Add an APK :-1. Go to your Google Play Developer Console. 2. Select All applications All applications > Add new application. 3. Using the drop down menu, select a default language and add a title for your app. Type the name of your app as you want it to appear in Google Play. 4. Select Upload APR. 5. Choose from the Production, Beta, or Alpha channels and select Upload your APK.M0re information about alpha/beta testiniven below The Developer Console provides rich testing features and staged rollouts that help you to provide apps that satisfy your users. Cloud Test Lab :-Get free automated testing of your app on physical devices covering nearly every brand, model, and version of the devices your users might have. The lab helps you quickly find compatibility issues that you might miss using only your available test devices. Alpha and beta tests:-Collect user feedback on early versions of your app With alpha and beta testing. Distribute your pre-release app to users as an open beta with a one-click, opt-in URL or as a closed beta using an email list, Google Group, or Google+ community. Users can provide feedback, while not affecting your app’s public reviews and rating. This valuable feedback helps you test features and improve the quality of your app.. Staged rollouts :-Discover and lix problems With a limited user base before making a wider release. With staged rollouts, you can release app updates progressively to an increasing portion of your users. You can fix problems before your app reaches the broader user community. Tip: If you fmd an issue during a rollout stage, you can halt the rollout, make the fix, and then resume.Manage Your App -Manage your APKs:- Upload and manage your Android application packages (APK) to the Developer Console as drafts or to your Alpha, Beta, or Production channels. Tip: Ensure that users get the best possible experience for the smallest app downloads by creating multiple APKs with just the right content for hardware features such as screen Size. In-app products and subscriptions :- Manage your in-app products and price them for local markets. Offer weekly, monthly, annual, or seasonal subscriptions. Attract new users with features such as grace periods and trials. Pricing and distribution:-Control the price of your app for each country tht you distribute to. Make your app available to new audiencesopt-in to Android Auto, Android TV, and Android Wear, as well as Designed for Families, GooglePlyfor Work, and Google Play for Education.",
      "Rating":"8.16",
      "episode":500,
      "categorie":"Android Development",
      "studio":"Madhouse",
      "img":"https://387b72ivq1z3mni0n261y7l1-wpengine.netdna-ssl.com/wp-content/uploads/2017/05/10-7-700x341.png"
   },
   {
      "name":"How to get Users",
      "description":"Get Users :-You’ve published your app, now how do you acquire users? Every app and game is different, but there are some common themes from successful Google Play developers. These best practices are critical to your app or game’s success. Create a Great Listing :-Make your listing page compelling and integrate it into your marketing campaigns. Promote Your App With Ads :-Promote your app with AdWords to find new users at the right moment. Opportunities &  Programs :- Take advantage of the many ways you can distribute your app to cosumers, students, and businesses through Google Play.  Improve Your Marketing ROI:- Combine the power of Analytics with other data sources to understand the performance of each of your marketing channels. Expand Into New Markets:-Tap fast-growing markets in Japan, Korea, India, Brazil, and many other countries around the world. Analyze :- Understanding What your users do inside your app is the key to engaging and monetizing them. Smarter App Invites :-Tap into your existing user be to increase downloads and increase conversions. Offer Over-the-air Installs:- Let users send your app directly to their devices when they sign in with Google. Drive installs from YouTube:- Bring users from Videos to your store listing with a merchandise card available on YouTube. Cross-Sell with House Ads :-Tap into your existing user base to increase downloads and increase conversions. Increase installs with Store Listing Experiments :-Run experiments to find the best possible Play Store listing page. Understand Where Your Users Come From:-Use the Developer Console to identify the channels that bring the greatest volume of high-value users. Add An App Install Banner On Your Mobile Website :-Add a native app install banner to your mobile website and allow Visitors to install your app straight from your site.",
      "Rating":"8.39",
      "episode":14,
      "categorie":"Android Development",
      "studio":"Android Development",
      "img":"https://miro.medium.com/max/1400/0*2rBrwjxddylWiAsi"
   },
   {
      "name":"How to Earn Money",
      "description":"Earn :-There are many ways to make money With your apps on Google Play, and we offer a variety of tools to make it easy. Take advantage of Google Play’s phenomenal growth by using one or more of the business models available. To get started, set up your Merchant Account from your Developer Console. This will not only help you get paid, but also help you track where your money is coming from. Monetize Premium Apps :-Charging users to download your apps is a simple, convenient monetization model. Monetize Freemium Apps :- Monetize Freemium Apps Use Google Play In-app Billing and other tools to monetize your free apps. Monetize With Subscriptions :-Sell subscriptions to your products to create continuing revenue streams. Earn Money from AdMob :-If you are a developer and you are looking for a way to make money on your own app or game While still keeping it free, you can make decent money using the AdMob system. Choose the right ad format : 1. Banner ads appear at the top or bottom of your app screen and can prot users to install apps, Visit websites, get directions, View products or call a phone number. 2. AdMob interstitials are full-page ads that appear in your app at natural breaks or transition points. A common use case is after a level is completed in a game. Our advertisers use interstitials to create engaging brand experiences, or direct action, such as driving app downloads. 3. AdMob’s video ads bring rich brand experiences to your app, and the flexible nature of the format allows users to skip the Video after 5 seconds. Note: For more information and how to use admob in you app, Go to this link: https://www.goog1e.co.in/admob/ E-commerce :-With Android Pay, you’ve the added flexibility of selling physical goods and services, such as clothing or movie tickets, through your apps using the Android Pay API (US Only) . You can use this option where your app is the store-front for retail Convenient, Frictionless Purchasing :-Users can purchase instantly with a choice of payment methods. Drive Conversions :- Disover here your users are coming from, drive engagement, and surface your in-app products to maximize your conversions. Understand the Value of Your Users :-Understand What makes users come back to your app and improve retention.",
      "Rating":"8.01",
      "episode":12,
      "categorie":"Android Development",
      "studio":"Studio Pierrot",
      "img":"https://www.hiddenbrains.co.uk/wp-content/uploads/2018/01/Earn-Money-768x397.jpg"
   },
   {
      "name":"Advertisement",
      "description":"Adward :- To start your campaign, go to httpszlladwords.google.com, lind the “Get started now” button, and sign up for an AdWords account. Once you’re logged in, click the “Create your Iirst campaign” button. 1:- Select your campaign type and name. First, choose the campaign type-for now, we highly recommend the “Search Network only” option, then give your campaign a name. 2:- Choose the geographic location Where you’d like ads to show. Next, decide how large or small a geographic area you want to target. You can choose whole countries, regions of countries, states or provinces, cities-even U.S. Congressional districts. 3:- Choose your “bid strategy,” and set your daily budget. Change the default “Bid strategy” to “I’ll manually set my bids for clicks.” This gives you more control and will help you learn AdWords at a greater level of understanding. You can always change to one of the many automatic options later. Set your daily budget so that if you screw up big-time, your checking account won’t get emptied You can always come back and bump it up, but it’s important to have a safety net. 4:- Ignore the “Ad Extensions” section for now. This is an important part of any campaign, but leave this for now and add these later after you’ve tinished all nine steps. Click “Save and continue.” 5:_ Create your Iirst ad group, and write your lirst ad. More people click on ads when theadline includes the keyword they’re searching on. So use your keywords in your headline when you can. You’re limited to 25 characters here, so for some search terms, you’ll need to use abbreviations or shorter synonyms. The second and third lines allow for 35 characters of text each. In most markets, you’ll be more successful if you describe a benefit on the second line, followed by a feature or offer on the third line. Later on, you can test Which order converts better.6:- Insert your keywords into the keyword field in your account. Paste in your keywords. Start with just one set, and add plus signs (+), brackets ([ D, and quotes (“ “) to see eisely how many searches of each type you’ll get. When you’re getting started, it’s not a good idea to dump hundreds or thousands of keywords in. Start with a tiny handful of important ones, and work from there. 7:- Set your maximum cost-per-click. Set your maximum price-per-click now (called your “default bid”), but realize this: Every keyword is theoretically a different market, Which means that each of your major keywords will need a bid price of its own. Google will let you set individual bids for each keyword later. 8:- Review everything. Double-check your ad and keywords to be sure they’re the best possible match. Check your cost-per-click to be sure you get the positions on the page you want. Double check your daily budget to be sure you don’t unwittingly drain your bank account right out of the gate. 9:- Enter your billing information. Your ads will start showing as soon as you confirm your payment information. N ow you’re set. Website Ad :-If you want to your app to perform well you’re going to haveo pend time actively promoting it success doesn’t just happen by itself. Unfortunately, a large number of developers don’t know the first thing about promoting their app. If you form part of this group, well, you’re in luck! To help you get started, we’ve put together this list of ten of the best websites to promote your app. And best of all, they're free. 1:- Launching Next If you’re trying to build up some hype for your mobile app prior to launch, consider submitting your app for review by Launching Next. You only geosay a few words about your app, but it’s well worth the couple of minutes it will take to fill out the submission form a good number of apps accepted, there are regular updates dyou get a hungry audience, all looking to find the next big thing. 2:- Springwise Springwise won’t accept just any run of the mill app; to be considered, you need to be offering something truly groundbreaking. Tick that box and your app can get a lot of exposure to a large, tech-savvy audience. It’s not just mobile as tat get featured; any unique ideas for a new business has a place. 3:- The Startup Pitch To get featured on The Startup Pitch, you’ll have to answer several carefully chosen questions about your app, essentially turning your submission into a pitch to encourage audience members to try out your app. This is great as itallows you not just to talk about What your app is, but why people should try it out. 4:- SuS SuS short for Startups using Startups is a quirky little site Where entrepreneurs are encouraged to share thethey found most useful with other startups. The “I scratch your back, you scratch mine” is a nice twist, and as a developer you’re able to submit any apps you’ve created as well as the apps you use. 5:- Betalist If you’re yet to launch your app, Betalist is a great place to start your promotion; only startups with a “coming soon” page are accepted. The exposure you can generate is generally impressive, with up to 500 subscribers to your mailing list commonplace think what you could do with tha! Sign-up is free, but you can pay to speed things along. 6:- AppStorm The AppStorm website is broken down into several different sections, which each one dedicated to a different mobile platform perfect if your app is only available on a specific platform. As well as allowing you to explain what your app does, AppStorm also personally review certain apps and send out a regular roundup newsletter to their ergrowing mailing list.",
      "Rating":"6.55",
      "episode":51,
      "categorie":"Android Development",
      "studio":"Studio Pierrot",
      "img":"https://miro.medium.com/max/1400/1*MeE_NkhQGCgC3dHK99LLXg.jpeg"
   }
   
]
